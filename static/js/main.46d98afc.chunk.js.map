{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","Props","className","mode","href","title","type","id","onClick","toogle","htmlFor","TextForm","useState","Text","setText","style","color","behavior","scrollamount","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","newText1","toLowerCase","split","join","length","defaultProps","About","App","setMode","document","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.46d98afc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(Props) {\r\n  // const [Mode,setMode]=useState(\"Enable dark mode\");\r\n  // if(Props.mode==='dark'){\r\n  //   setMode(\"Enable white mode\")\r\n  // }else{\r\n  //   setMode(\"Enable dark mode\")\r\n  // }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${Props.mode} bg-${Props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {Props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {Props.About}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${Props.mode==='light'?'dark':'light'}`}>\r\n<input className=\"form-check-input\" type=\"checkbox\" onClick={Props.toogle} id=\"flexSwitchCheckDefault\"/>\r\n<label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{`${Props.mode ==='dark'?'Enable lightmode':'Enable dark mode'}`}</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav> \r\n  );\r\n}\r\n    \r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  About: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps={\r\n      title:'Set title', \r\n      About:'Aboutt'   \r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(Props) {\r\n    const handleUpClick = ()=>{\r\n    //    console.log(\"Handle is clicked\");\r\n       let newText=Text.toUpperCase();\r\n       setText(newText)\r\n    }\r\n\r\n    const handleDownClick =()=>{\r\n        // console.log(\"Handle is clicked\");\r\n        let newText1=Text.toLowerCase();\r\n        setText(newText1)\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n       // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const removeSpace=()=>{\r\n        let newText=Text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const [Text,setText] =useState(\" \");\r\n    return (\r\n       <>\r\n      <div className=\"container\" style={{color:Props.mode==='dark'?'white':'#253b5c'}}>\r\n       <marquee behavior=\"slide\" scrollamount=\"30\"> <h1 >{Props.heading}</h1></marquee>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={Text} \r\n          style={{backgroundColor:Props.mode==='dark'?'grey':'white',color:Props.mode==='dark'?'white':'#253b5c'}} id=\"myBox\" onChange={handleOnChange} rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}> Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={removeSpace}>Remove extra space</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:Props.mode==='dark'?'white':'#253b5c'}}>\r\n           <h2>Your summary</h2>\r\n           <p>{Text.split(\" \").length} words and {Text.length} characters</p>\r\n           <p>{0.008*Text.split(\" \").length} minutes read</p>\r\n           <h2>Preview</h2>\r\n           <p>{Text}</p>\r\n      </div>\r\n   </>\r\n    );\r\n}","\nimport './App.css';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\n\nimport React, { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n   \n  const toogle=()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#253b5c';\n      document.title='Textutils -Dark Mode';\n      setInterval(()=>{\n               document.title='Textutil is amazing'\n      },2000);\n      setInterval(()=>{\n               document.title='Enjoy this feature'\n      },1500);\n    \n    }else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      document.title='Textutils -Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n     <Navbar title=\"Textutils\" About=\"About\" mode={mode} toogle={toogle} />\n     <div className=\"container my-3\">\n     {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n         \n          </Route>\n      </Switch> */}\n       <TextForm heading=\"Enter the text to analyze\" mode={mode} />\n     </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}